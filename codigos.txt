ls -al = Ver archivos de una carpeta (a = archivos ocultos) (l = ponerlos en lista)
mkdir <nombre> = crea una carpeta
touch <archivo.txt> = Crea un archivo .txt
cat  <archivo.txt> = Abrir un archivo txt
cd = Cambiar de carpeta 
code = abrir visual studio
// EN GIT
git init = Iniciar una carpeta a git
git add <archivo> = Añadir al staging un archivo
git commit -m = Agregar un archivo al repositorio
-// git commit -am = Añadir al staging y agregar al repositorio
git log = Ver modificaciones de tados los archivos
git log <nombre_archivo> = Ver modificaciones de un archivo en especifico
git log --all --graph = Ver las ramas graficadas como lo hace Fredy
git status = Ver si hay algo en el repo o en el staging (rojo = no fue añadido; verde = esta en el staging)
git branch <nombre> = Crear una rama
git checkout <nombre rama> = Viaja de rama (nombre rama = A que rama viajar)
git checkout <id_sha> = Visualiza esa version de archivo (id_sha = Ingresar codigo largo de 40 digitos)


// DE GIT A GITHUB
git remote add <nombre> <url> = Creamos un repositorio remoto (poner nombre) (ingresar url de github)
git pull <nombre> <master> = Bajamos los archivos del repo. remoto a Git (nombre repo remoto) (rama a bajar de GitHub)
-- En caso haya un error con final (unrelat histories)
git pull origin master --allow-unrelated-histories

//PASOS UNIR DE GIT A GITHUB CON HTTP
1. Crear repositorio remoto
    git remote add origin <url> (El url lo copiamos de github)
2. Verificar si todo esta bien
    git remote     git remote -verde
3. Bajar los archivos de GitHub a Git
    git pull origin remote --allow-unrelated-histories
    (Si sucede un tipo de error solucionarlo y poner el codigo anterior)
    //CAMBIAR DE HTTPS A SSH
1. Creamos la llave publica y privada
    ssh-keygen -t rsa -b 4096 -C "correo@gmail.com"
2. Decir que la llave existe
    ssh-add ~/.ssh/id_rsa
3. Darle la llave publica a GitHub
    ** Vamos a ~/.ssh/  abrimos id_rsa.pub lo copiamos 
    Vamos a GitHub-config-https y ssh; pegamos el codigo **
4. Cambiamos de https a ssh
    git remote set-url origin <url de ssh desde GitHub>
5. Hacer un pull a GitHub
    git pull origin master

// CREAR TAGS
1. Crear Tag
    git tag -a <nombre> -m "mensaje" HASH
2. Eliminar tag de git
    git tag -d <nombre>
3. Eliminar tag de github
    git push origin :/sets/tag/<nombre>